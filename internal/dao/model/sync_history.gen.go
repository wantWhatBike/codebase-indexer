// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameSyncHistory = "sync_history"

// SyncHistory mapped from table <sync_history>
type SyncHistory struct {
	ID            int32      `gorm:"column:id;primaryKey;autoIncrement:true;comment:Unique identifier for the synchronization history record" json:"id"`       // Unique identifier for the synchronization history record
	CodebaseID    int32      `gorm:"column:codebase_id;not null;comment:ID of the associated project repository" json:"codebase_id"`                           // ID of the associated project repository
	Message       *string    `gorm:"column:message;comment:Content of the synchronization message" json:"message"`                                             // Content of the synchronization message
	PublishStatus string     `gorm:"column:publish_status;not null;default:pending;comment:Publishing status: pending, success, failed" json:"publish_status"` // Publishing status: pending, success, failed
	PublishTime   *time.Time `gorm:"column:publish_time;comment:Time of publication" json:"publish_time"`                                                      // Time of publication
	CreatedAt     *time.Time `gorm:"column:created_at;default:CURRENT_TIMESTAMP;comment:Time when the record was created" json:"created_at"`                   // Time when the record was created
	UpdatedAt     *time.Time `gorm:"column:updated_at;default:CURRENT_TIMESTAMP;comment:Time when the record was last updated" json:"updated_at"`              // Time when the record was last updated
}

// TableName SyncHistory's table name
func (*SyncHistory) TableName() string {
	return TableNameSyncHistory
}
