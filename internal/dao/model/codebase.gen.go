// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameCodebase = "codebase"

// Codebase mapped from table <codebase>
type Codebase struct {
	ID            int32      `gorm:"column:id;primaryKey;autoIncrement:true;comment:Unique identifier for the project repository" json:"id"` // Unique identifier for the project repository
	ClientID      string     `gorm:"column:client_id;not null;comment:User client identifier, such as MAC address" json:"client_id"`         // User client identifier, such as MAC address
	UserID        string     `gorm:"column:user_id;not null;comment:User identifier, such as email or phone number" json:"user_id"`          // User identifier, such as email or phone number
	Name          string     `gorm:"column:name;not null;comment:Name of the project repository" json:"name"`                                // Name of the project repository
	ClientPath    string     `gorm:"column:client_path;not null;comment:Local path of the project on the user's machine" json:"client_path"` // Local path of the project on the user's machine
	Status        string     `gorm:"column:status;not null" json:"status"`
	Path          string     `gorm:"column:path;not null;comment:FilePaths of the codebase" json:"path"`                                               // Path of the codebase
	FileCount     int32      `gorm:"column:file_count;not null;comment:Number of files in the project" json:"file_count"`                         // Number of files in the project
	TotalSize     int64      `gorm:"column:total_size;not null;comment:Total size of the project (in bytes)" json:"total_size"`                   // Total size of the project (in bytes)
	ExtraMetadata *string    `gorm:"column:extra_metadata;comment:Additional metadata about the project" json:"extra_metadata"`                   // Additional metadata about the project
	CreatedAt     *time.Time `gorm:"column:created_at;default:CURRENT_TIMESTAMP;comment:Time when the record was created" json:"created_at"`      // Time when the record was created
	UpdatedAt     *time.Time `gorm:"column:updated_at;default:CURRENT_TIMESTAMP;comment:Time when the record was last updated" json:"updated_at"` // Time when the record was last updated
}

// TableName Codebase's table name
func (*Codebase) TableName() string {
	return TableNameCodebase
}
