log_dir: "/tmp/logs"
retention_days: 1
variables:
  __image__: "zgsm/scip-base:latest"
languages:
  - name: typescript
    detection_files: ["tsconfig.json"]
    index:
      name: scip-typescript
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "node"
            - "--max-old-space-size=16000" #16g
            - "/usr/bin/scip-typescript"
            - "index"
            - "--cwd"
            - "__sourcePath__"
            - "--output"
            - "__outputPath__/index.scip"
            - "--infer-tsconfig"

  - name: javascript
    detection_files: ["package.json"]
    index:
      name: scip-typescript
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "node"
            - "--max-old-space-size=16000" #16g
            - "/usr/bin/scip-typescript"
            - "index"
            - "--cwd"
            - "__sourcePath__"
            - "--output"
            - "__outputPath__/index.scip"
            - "--infer-tsconfig"

  - name: go
    detection_files: ["go.mod", "go.work"]
    index:
      name: scip-go
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "scip-go"
            - "--output"
            - "__outputPath__/index.scip"

  - name: java
    detection_files: ["pom.xml", "build.gradle"]
    build_tools:
      - name: maven
        detection_files: ["pom.xml"]
        priority: 10
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "scip-java"
              - "index"
              - "--cwd"
              - "__sourcePath__"
              - "--targetroot"
              - "__outputPath__/build"
              - "--output"
              - "__outputPath__/index.scip"
              - "--"
              - "verify"
              - "--batch-mode"
              - "--fail-never"
              - "-DskipTests"
              - "--offline"
              - "-T"
              - "8"
      - name: gradle
        detection_files: ["build.gradle"]
        priority: 20
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "scip-java"
              - "index"
              - "--cwd"
              - "__sourcePath__"
              - "--targetroot"
              - "__outputPath__/build"
              - "--output"
              - "__outputPath__/index.scip"
              - "--"
              - "--offline"
              - "--continue"
              - "--no-tests"
              - "--parallel"
              - "--max-workers"
              - "8"
              - "--no-interactive"
    index:
      name: scip-java
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "ls"
            - "__outputPath__/index.scip"

  - name: python
    detection_files: ["pyproject.toml", "requirements.txt", "setup.py", "Pipfile", "poetry.lock", "environment.yml"]
    build_tools:
      - name: poetry
        detection_files: ["poetry.lock", "pyproject.toml"]
        priority: 10
        build_commands: []
      - name: pipenv
        detection_files: ["Pipfile"]
        priority: 20
        build_commands: []
      - name: pip
        detection_files: ["requirements.txt"]
        priority: 30
        build_commands: []
    index:
      name: scip-python
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "scip-python"
            - "index"
            - "--output"
            - "__outputPath__/index.scip"
            - "--cwd"
            - "__sourcePath__"
            - "--project-version"
            - "1"

  - name: ruby
    detection_files: ["Gemfile"]
    index:
      name: scip-ruby
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "scip-ruby"
            - "--dir"
            - "__sourcePath__"
            - "--max-threads"
            - "32"
            - "--index-file"
            - "__outputPath__/index.scip"
            - "--gem-metadata"
            - "ruby@v0.0.1"

  - name: csharp
    detection_files: [".sln", ".csproj", ".fsproj", ".vbproj"]
    index:
      name: scip-dotnet
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "scip-dotnet"
            - "index"
            - "--output"
            - "__outputPath__/index.scip"
            - "--working-directory"
            - "__sourcePath__"
            - "--skip-dotnet-restore"
            - "True"

  - name: c
    detection_files: ["CMakeLists.txt", "configure", "Configure", "Makefile"]
    build_tools:
      - name: cmake
        detection_files: ["CMakeLists.txt"]
        priority: 10
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "cmake"
              - "-B"
              - "build"
              - "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
              - "-S"
              - "__sourcePath__"
              - "-B"
              - "__outputPath__/build/"
      - name: make
        detection_files: ["Makefile"]
        priority: 20
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "bare"
              - "--output"
              - "__outputPath__/build/compile_commands.json"
              - "--"
              - "make"
              - "-C"
              - "__sourcePath__"
              - "-j"
              - "16"
      - name: autoconf
        detection_files: ["configure", "Configure"]
        priority: 30
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "bash"
              - "-c"
              - "./configure || ./Configure && bare --output __outputPath__/build/compile_commands.json -- make -C __sourcePath__ -j 16"
    index:
      name: scip-clang
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "scip-clang"
            - "--compdb-path"
            - "__outputPath__/build/compile_commands.json"
            - "--index-output-path"
            - "__outputPath__/index.scip"
            - "-j"
            - "16"

  - name: cpp
    detection_files: ["CMakeLists.txt", "configure", "Configure", "Makefile"]
    build_tools:
      - name: cmake
        detection_files: ["CMakeLists.txt"]
        priority: 10
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "cmake"
              - "-B"
              - "build"
              - "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
              - "-S"
              - "__sourcePath__"
              - "-B"
              - "__outputPath__/build/"

      - name: make
        detection_files: ["Makefile"]
        priority: 20
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "bare"
              - "--output"
              - "__outputPath__/build/compile_commands.json"
              - "--"
              - "make"
              - "-C"
              - "__sourcePath__"
              - "-j"
              - "16"

      - name: autoconf
        detection_files: ["configure", "Configure"]
        priority: 30
        build_commands:
          - base: "docker"
            args:
              - "run"
              - "--rm"
              - "-v"
              - "__sourcePath__:__sourcePath__"
              - "-w"
              - "__sourcePath__"
              - "__image__"
              - "bash"
              - "-c"
              - "./configure || ./Configure && bare --output __outputPath__/build/compile_commands.json -- make -C __sourcePath__ -j 16"

    index:
      name: scip-clang
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "__image__"
            - "scip-clang"
            - "--compdb-path"
            - "__outputPath__/build/compile_commands.json"
            - "--index-output-path"
            - "__outputPath__/index.scip"
            - "-j"
            - "16"


  - name: rust
    detection_files: ["Cargo.toml"]
    index:
      name: scip-rust
      commands:
        - base: "docker"
          args:
            - "run"
            - "--rm"
            - "-v"
            - "__sourcePath__:__sourcePath__"
            - "-w"
            - "__sourcePath__"
            - "-e"
            - "CARGO_NET_OFFLINE=true"
            - "-e"
            - "NUM_JOBS=32"
            - "-e"
            - "CARGO_BUILD_JOBS=32"
            - "-e"
            - "RUSTUP_AUTO_INSTALL=0"
            - "__image__"
            - "rust-analyzer"
            - "scip"
            - "__sourcePath__"
            - "--output"
            - "__outputPath__/index.scip"
          env:
            - "CARGO_NET_OFFLINE=true"
            - "NUM_JOBS=32"
            - "CARGO_BUILD_JOBS=32"
            - "RUSTUP_AUTO_INSTALL=0"