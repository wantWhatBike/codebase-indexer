version: "2"
run:
  timeout: 5m
  concurrency: 4

output:
  formats:
    text:
      # Output path can be either `stdout`, `stderr` or path to the file to write to.
      # Default: stdout
      path: stdout
      # Print linter name in the end of issue text.
      # Default: true
      print-linter-name: true
      # Print lines of code with issue.
      # Default: true
      print-issued-lines: true
      # Use colors.
      # Default: true
      colors: true

issues:
  # 最大显示的问题数（0 表示不限制）
  max-issues-per-linter: 0
  max-same-issues: 0

linters:
  default: none
  enable:
    - bodyclose       # 检查未关闭的 HTTP 响应体（资源泄漏）
    - errcheck        # 检查未处理的错误
    - errorlint       # 改进错误处理的检查
    - govet           # Go 官方静态分析工具
    - ineffassign     # 检测无效赋值
    - nilerr          # 检测 nil 错误的错误处理
    - staticcheck     # 全面的静态分析
  exclusions:
    # - `strict`: sources are excluded by strictly following the Go generated file convention.
    #    Source files that have lines matching only the following regular expression will be excluded: `^// Code generated .* DO NOT EDIT\.$`
    #    This line must appear before the first non-comment, non-blank text in the file.
    #    https://go.dev/s/generatedcode
    # - `lax`: sources are excluded if they contain lines like `autogenerated file`, `code generated`, `do not edit`, etc.
    # - `disable`: disable the generated files exclusion.
    #
    # Default: strict
    generated: lax
    # Log a warning if an exclusion rule is unused.
    # Default: false
    warn-unused: false
    # Which file paths to not exclude.
    # Default: []
    paths-except:
      - ".*_test.go$"