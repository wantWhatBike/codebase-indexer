syntax = "v1"

type Position {
	startLine   int `json:"startLine"` // 开始行（从1开始）
	startColumn int `json:"startColumn"` // 开始列（从1开始）
	endLine     int `json:"endLine"` // 结束行（从1开始）
	endColumn   int `json:"endColumn"` // 结束列（从1开始）
}

type RelationNode {
	content  string         `json:"content"` // 代码内容
	nodeType string         `json:"nodeType"` // 节点类型（definition=定义，reference=引用）
	filePath string         `json:"filePath"` // 文件相对路径
	position Position       `json:"position"` // 代码位置
	children []RelationNode `json:"children"` // 子节点（引用关系）
}

type RelationRequest {
	clientId       string `form:"clientId"` // 用户机器ID
	projectPath    string `form:"projectPath"` // 项目绝对路径
	filePath       string `form:"filePath"` // 文件相对路径
	startLine      int    `form:"startLine"` // 开始行
	startColumn    int    `form:"startColumn"` // 开始列
	endLine        int    `form:"endLine"` // 结束行
	endColumn      int    `form:"endColumn"` // 结束列
	symbolName     string `form:"symbolName,optional"` // 符号名（可选）
	includeContent int    `form:"includeContent,default=0"` // 是否返回代码内容（1=是，0=否，默认0）
	maxLayer       int    `form:"maxLayer,optional,default=10"` // 最大层级数（默认10）
}

type RelationResponseData {
	list []RelationNode `json:"list"` // 关系树列表
}

@server (
	jwt:    Auth
	prefix: /codebase-indexer
)
service codebaseindexer {
	@handler relation
	get /api/v1/relations (RelationRequest) returns (RelationResponseData)
}

